1.4.6 Give the order of growth (as a function of N ) of the running times of each of the
following code fragments:

a. int sum = 0;
 for (int n = N; n > 0; n /= 2)
 for(int i = 0; i < n; i++)
 sum++;

 Ans) Geometric sum if N=64, then 64 + 32 + 16 + 8 + 4 + 2 +1.
 The converges to 2N. Linear time.
  //THINK ABOUT THIS ONE A LITTLE MORE

 b. int sum = 0;
  for (int i = 1 i < N; i *= 2)
  for (int j = 0; j < i; j++)
  sum++;


  Ans) This will result in 1 + 4 + 16 + 64 +...+N
  This is a geometric sum with base 4. This converges to 4N
  Linear time.
  //THINK ABOUT THIS ONE A LITTLE MORE


  c. int sum = 0;
   for (int i = 1 i < N; i *= 2)
   for (int j = 0; j < N; j++)
   sum++;

Ans) Outer loop executes log2N times and N times for each time.
NlogN.
  //THINK ABOUT THIS ONE A LITTLE MORE
